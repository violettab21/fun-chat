{"version":3,"file":"bundle.f834cf974ee4e15a3270.js","mappings":"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","sources":["webpack://fun-chat/./src/app/utilities.ts","webpack://fun-chat/./src/assets/close.svg","webpack://fun-chat/./src/app/helpers.ts","webpack://fun-chat/./src/app/pages/login-handlers.ts","webpack://fun-chat/./src/assets/rss-logo.svg","webpack://fun-chat/./src/app/pages/chat.ts","webpack://fun-chat/./src/app/pages/info.ts","webpack://fun-chat/./src/app/services/chat-service.ts","webpack://fun-chat/./src/app/pages/chat-handlers.ts","webpack://fun-chat/./src/app/pages/login.ts","webpack://fun-chat/./src/types.ts","webpack://fun-chat/./src/app/components/router.ts","webpack://fun-chat/./src/app/state/state.ts","webpack://fun-chat/./src/app/state/session-storage.ts","webpack://fun-chat/./src/app/components/modal.ts","webpack://fun-chat/./src/app/connection/connection.ts","webpack://fun-chat/./src/app/services/user-service.ts","webpack://fun-chat/./src/app/pages/main-base.ts","webpack://fun-chat/webpack/bootstrap","webpack://fun-chat/webpack/runtime/define property getters","webpack://fun-chat/webpack/runtime/global","webpack://fun-chat/webpack/runtime/hasOwnProperty shorthand","webpack://fun-chat/webpack/runtime/make namespace object","webpack://fun-chat/webpack/runtime/publicPath","webpack://fun-chat/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isGeneralMessage = isGeneralMessage;\nexports.isUserPayloadServer = isUserPayloadServer;\nexports.isUserPayloadClient = isUserPayloadClient;\nexports.isErrorPayload = isErrorPayload;\nexports.isUsersPayloadServer = isUsersPayloadServer;\nexports.isMessagePayloadServer = isMessagePayloadServer;\nexports.isMessagesPayloadServer = isMessagesPayloadServer;\nexports.isMessages = isMessages;\nexports.isMessagePayloadServerStatus = isMessagePayloadServerStatus;\nexports.isChatState = isChatState;\nfunction isGeneralMessage(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('id' in data) || !('type' in data) || !('payload' in data))\n        return false;\n    return true;\n}\nfunction isUserPayloadServer(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('user' in data))\n        return false;\n    const userObject = data.user;\n    if (typeof userObject !== 'object' ||\n        userObject === null ||\n        !('isLogined' in userObject) ||\n        !('login' in userObject))\n        return false;\n    return typeof userObject.isLogined === 'boolean';\n}\nfunction isUsersPayloadServer(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('users' in data))\n        return false;\n    const usersObject = data.users;\n    if (typeof usersObject !== 'object' ||\n        usersObject === null ||\n        !Array.isArray(usersObject))\n        return false;\n    const userObject = usersObject[0];\n    if (typeof userObject !== 'object' ||\n        userObject === null ||\n        !('isLogined' in userObject) ||\n        !('login' in userObject))\n        return false;\n    return typeof userObject.isLogined === 'boolean';\n}\nfunction isMessagesPayloadServer(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('messages' in data))\n        return false;\n    const messagesObject = data.messages;\n    if (typeof messagesObject !== 'object' ||\n        messagesObject === null ||\n        !Array.isArray(messagesObject))\n        return false;\n    if (Array.isArray(messagesObject) && messagesObject.length === 0)\n        return true;\n    else {\n        const messageObject = messagesObject[0];\n        if (typeof messageObject !== 'object' ||\n            messageObject === null ||\n            !('id' in messageObject) ||\n            !('from' in messageObject) ||\n            !('to' in messageObject) ||\n            !('text' in messageObject) ||\n            !('datetime' in messageObject) ||\n            !('status' in messageObject))\n            return false;\n        return typeof messageObject.id === 'string';\n    }\n}\nfunction isMessagePayloadServerStatus(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('message' in data))\n        return false;\n    const messageObject = data.message;\n    if (typeof messageObject !== 'object' || messageObject === null)\n        return false;\n    if (!('id' in messageObject) || !('status' in messageObject))\n        return false;\n    return typeof messageObject.id === 'string';\n}\nfunction isMessages(data) {\n    if (typeof data !== 'object' || data === null || !Array.isArray(data)) {\n        return false;\n    }\n    const messageObject = data[0];\n    if (typeof messageObject !== 'object' ||\n        messageObject === null ||\n        !('id' in messageObject) ||\n        !('from' in messageObject) ||\n        !('to' in messageObject) ||\n        !('text' in messageObject) ||\n        !('datetime' in messageObject) ||\n        !('status' in messageObject))\n        return false;\n    return typeof messageObject.id === 'string';\n}\nfunction isUserPayloadClient(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('user' in data))\n        return false;\n    const userObject = data.user;\n    if (typeof userObject !== 'object' ||\n        userObject === null ||\n        !('password' in userObject) ||\n        !('login' in userObject))\n        return false;\n    return typeof userObject.password === 'string';\n}\nfunction isErrorPayload(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('error' in data))\n        return false;\n    const error = data.error;\n    if (typeof error !== 'string')\n        return false;\n    return true;\n}\nfunction isMessagePayloadServer(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('message' in data))\n        return false;\n    const messageObject = data.message;\n    if (typeof messageObject !== 'object' || messageObject === null)\n        return false;\n    if (!('id' in messageObject) ||\n        !('from' in messageObject) ||\n        !('to' in messageObject) ||\n        !('text' in messageObject) ||\n        !('datetime' in messageObject) ||\n        !('status' in messageObject))\n        return false;\n    return typeof messageObject.text === 'string';\n}\nfunction isChatState(data) {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n    if (!('currentUser' in data) || !('activeChatWith' in data))\n        return false;\n    const currentUser = data.currentUser;\n    const activeChatUser = data.activeChatWith;\n    if (typeof currentUser !== 'object' ||\n        currentUser === null ||\n        typeof activeChatUser !== 'object' ||\n        activeChatUser === null)\n        return false;\n    return true;\n}\n","export default __webpack_public_path__ + \"fdaba3d27bc321d0775803fac6189782.svg\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDate = getDate;\nexports.cancelEnterTextarea = cancelEnterTextarea;\nexports.getStatus = getStatus;\nfunction getDate(milliseconds) {\n    return new Intl.DateTimeFormat('default', {\n        timeStyle: 'short',\n        dateStyle: 'short',\n    }).format(milliseconds);\n}\nfunction cancelEnterTextarea(event) {\n    if (event.key === 'Enter') {\n        event.preventDefault();\n    }\n}\nfunction getStatus(statusObject) {\n    let status = '';\n    if (statusObject === null || statusObject === void 0 ? void 0 : statusObject.isReaded) {\n        status = 'read';\n    }\n    else if (statusObject === null || statusObject === void 0 ? void 0 : statusObject.isDelivered) {\n        status = 'delivered';\n    }\n    else\n        status = 'sent';\n    return status;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.infoButtonHandlerLogin = infoButtonHandlerLogin;\nexports.loginHandler = loginHandler;\nexports.validateUserName = validateUserName;\nexports.validatePassword = validatePassword;\nexports.disableLoginButton = disableLoginButton;\nexports.enableLoginButton = enableLoginButton;\nexports.passwordFieldHandler = passwordFieldHandler;\nexports.userNameFieldHandler = userNameFieldHandler;\nconst user_service_1 = require(\"../services/user-service\");\nfunction infoButtonHandlerLogin(router) {\n    return (event) => {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        router.openPage('info');\n    };\n}\nfunction loginHandler(Connection, UserService) {\n    return (event) => {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        const request = (0, user_service_1.prepareUserRequest)(Connection, UserService);\n        UserService.sendUserMessage(request);\n    };\n}\nfunction validatePassword(inputPassword, errorMessage) {\n    if (inputPassword.validity.valid === false) {\n        if (inputPassword.validity.valueMissing) {\n            errorMessage.textContent = 'Password is required';\n        }\n        else if (inputPassword.validity.tooShort) {\n            errorMessage.textContent =\n                'Password should have at least 6 characters';\n        }\n        else if (inputPassword.validity.tooLong) {\n            errorMessage.textContent = 'Password should have 10 characters max';\n        }\n        else if (inputPassword.validity.patternMismatch) {\n            errorMessage.textContent =\n                'Password can contain low letters, capital Letters and numbers';\n        }\n        disableLoginButton();\n    }\n    else {\n        errorMessage.textContent = '';\n        enableLoginButton();\n    }\n}\nfunction validateUserName(inputUserName, errorMessage) {\n    if (inputUserName.validity.valid === false) {\n        if (inputUserName.validity.valueMissing)\n            errorMessage.textContent = 'User Name is required';\n        else if (inputUserName.validity.tooShort)\n            errorMessage.textContent =\n                'User Name should have at least 2 characters';\n        else if (inputUserName.validity.tooLong)\n            errorMessage.textContent =\n                'User Name should have 10 characters max';\n        disableLoginButton();\n    }\n    else {\n        errorMessage.textContent = '';\n        enableLoginButton();\n    }\n}\nfunction disableLoginButton() {\n    const button = document.querySelector('.login-button');\n    if (button instanceof HTMLButtonElement)\n        button.disabled = true;\n}\nfunction enableLoginButton() {\n    const button = document.querySelector('.login-button');\n    if (button instanceof HTMLButtonElement)\n        button.disabled = false;\n}\nfunction passwordFieldHandler(inputPassword, errorMessage) {\n    return () => {\n        validatePassword(inputPassword, errorMessage);\n    };\n}\nfunction userNameFieldHandler(input, errorMessage) {\n    return () => {\n        validateUserName(input, errorMessage);\n    };\n}\n","export default __webpack_public_path__ + \"f888154012dd957ef78d81f54df759b4.svg\";","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.renderChatPageContent = renderChatPageContent;\nexports.drawUsers = drawUsers;\nexports.drawMessage = drawMessage;\nexports.drawMessageHistory = drawMessageHistory;\nexports.addMessagesCount = addMessagesCount;\nexports.increaseMessageCount = increaseMessageCount;\nexports.removeMessageCount = removeMessageCount;\nexports.removeNewMessageLine = removeNewMessageLine;\nexports.showContextMenu = showContextMenu;\nexports.drawUser = drawUser;\nconst rss_logo_svg_1 = __importDefault(require(\"../../assets/rss-logo.svg\"));\nconst helpers_1 = require(\"../helpers\");\nconst chat_handlers_1 = require(\"./chat-handlers\");\nfunction renderChatPageContent(userService, chatService, router) {\n    const container = document.querySelector('.wrapper');\n    if (container) {\n        container.innerHTML = '';\n        container.append(createHeader(userService, router), createMain(userService, chatService), createFooter());\n    }\n}\nfunction createHeader(userService, router) {\n    const header = document.createElement('header');\n    header.className = 'header';\n    const appName = document.createElement('p');\n    appName.className = 'app-name';\n    appName.textContent = 'Fun Chat';\n    const menu = document.createElement('ul');\n    menu.className = 'header-menu';\n    const userName = document.createElement('li');\n    userName.className = 'header-user-name';\n    const currentUserName = userService.currentUser.login;\n    if (currentUserName)\n        userName.textContent = currentUserName;\n    const infoButton = document.createElement('li');\n    infoButton.className = 'chat-info-button';\n    infoButton.textContent = 'Info';\n    const infoHandler = (0, chat_handlers_1.infoButtonHandler)(router);\n    infoButton.addEventListener('click', infoHandler);\n    const logout = document.createElement('li');\n    logout.className = 'logout-button';\n    logout.textContent = 'Logout';\n    const logoutButtonHandler = (0, chat_handlers_1.logoutHandler)(userService);\n    logout.addEventListener('click', logoutButtonHandler);\n    menu.append(userName, infoButton, logout);\n    header.append(appName, menu);\n    return header;\n}\nfunction createMain(userService, chatService) {\n    const main = document.createElement('main');\n    main.classList.add('main', 'main-chat');\n    const chatContainer = document.createElement('div');\n    chatContainer.className = 'chat-container';\n    chatContainer.append(createUsersSection(userService, chatService), createChatSection(chatService));\n    main.append(chatContainer);\n    return main;\n}\nfunction createUsersSection(userService, chatService) {\n    const usersSection = document.createElement('section');\n    usersSection.className = 'section-users';\n    const search = document.createElement('input');\n    search.className = 'search-input';\n    search.placeholder = 'Search';\n    const searchHandler = (0, chat_handlers_1.searchUsersHandler)(search, userService);\n    search.addEventListener('input', searchHandler);\n    const usersList = document.createElement('ul');\n    usersList.className = 'users';\n    const selectUserHandler = (0, chat_handlers_1.selectChatHandler)(chatService, userService);\n    usersList.addEventListener('click', selectUserHandler);\n    userService.getAllActiveUsers();\n    userService.getAllInactiveUsers();\n    usersSection.append(search, usersList);\n    return usersSection;\n}\nfunction createChatSection(chatService) {\n    const chatSection = document.createElement('section');\n    chatSection.className = 'section-chat';\n    const chatHeader = createChatSectionHeader();\n    const messages = createChatSectionMessages(chatService);\n    const chatSendMessageContainer = createChatSectionSendMessageBlock(chatService);\n    chatSection.append(chatHeader, messages, chatSendMessageContainer);\n    return chatSection;\n}\nfunction drawUser(user) {\n    const usersList = document.querySelector('.users');\n    const item = document.createElement('li');\n    item.textContent = user.login;\n    item.className = 'user-chat';\n    item.dataset.name = user.login;\n    const status = document.createElement('span');\n    status.className = 'user-status';\n    if (user.isLogined)\n        status.classList.add('user-status-active');\n    else\n        status.classList.add('user-status-inactive');\n    item.prepend(status);\n    if (usersList) {\n        usersList.append(item);\n    }\n}\nfunction createChatSectionHeader() {\n    const chatHeader = document.createElement('div');\n    chatHeader.className = 'chat-header';\n    const userName = document.createElement('p');\n    userName.className = 'selected-chat-user-name';\n    const status = document.createElement('p');\n    status.className = 'selected-user-status';\n    chatHeader.append(userName, status);\n    return chatHeader;\n}\nfunction createChatSectionMessages(chatService) {\n    const messages = document.createElement('div');\n    messages.className = 'chat-messages';\n    const infoMessage = document.createElement('p');\n    infoMessage.className = 'no-user-selected-message';\n    infoMessage.textContent = 'Select User to start chat';\n    messages === null || messages === void 0 ? void 0 : messages.append(infoMessage);\n    const readHandler = (0, chat_handlers_1.readMessagesHandler)(chatService);\n    messages.addEventListener('click', readHandler);\n    return messages;\n}\nfunction createChatSectionSendMessageBlock(chatService) {\n    const chatSendMessageContainer = document.createElement('div');\n    chatSendMessageContainer.className = 'chat-message-container';\n    const message = document.createElement('textarea');\n    message.placeholder = 'Type your message here...';\n    message.className = 'chat-input';\n    message.disabled = true;\n    message.addEventListener('keydown', helpers_1.cancelEnterTextarea);\n    const sendMessageButton = document.createElement('button');\n    sendMessageButton.className = 'chat-send-button';\n    sendMessageButton.textContent = 'Send';\n    sendMessageButton.disabled = true;\n    const handler = (0, chat_handlers_1.sendMessageHandler)(chatService, message);\n    sendMessageButton.addEventListener('click', handler);\n    document.addEventListener('keydown', handler);\n    chatSendMessageContainer.append(message, sendMessageButton);\n    return chatSendMessageContainer;\n}\nfunction createFooter() {\n    const footer = document.createElement('footer');\n    footer.className = 'footer';\n    const listFooterItems = document.createElement('ul');\n    listFooterItems.className = 'footer-content';\n    const schoolInfo = document.createElement('li');\n    schoolInfo.className = 'school-info';\n    schoolInfo.textContent = 'RSS School';\n    const schoolIcon = document.createElement('img');\n    schoolIcon.className = 'school-icon';\n    schoolIcon.src = rss_logo_svg_1.default;\n    schoolInfo.append(schoolIcon);\n    const gitHubInfo = document.createElement('li');\n    gitHubInfo.className = 'author-github';\n    const gitHubLink = document.createElement('a');\n    gitHubLink.className = 'author-github-link';\n    gitHubLink.href = 'https://github.com/violettab21';\n    gitHubLink.textContent = 'Violetta Batsura';\n    gitHubInfo.append(gitHubLink);\n    const copyright = document.createElement('li');\n    copyright.className = 'copyright';\n    copyright.textContent = `Fun Chat, 2025`;\n    listFooterItems.append(schoolInfo, gitHubInfo, copyright);\n    footer.append(listFooterItems);\n    return footer;\n}\nfunction drawUsers(users, chatService) {\n    const usersElements = [];\n    users.forEach((user) => {\n        const item = document.createElement('li');\n        item.dataset.name = user.login;\n        item.className = 'user-chat';\n        item.textContent = user.login;\n        const status = document.createElement('span');\n        status.className = 'user-status';\n        if (user.isLogined)\n            status.classList.add('user-status-active');\n        else\n            status.classList.add('user-status-inactive');\n        item.prepend(status);\n        usersElements.push(item);\n    });\n    const usersList = document.querySelector('.users');\n    if (usersList) {\n        usersList.innerHTML = '';\n        usersList.append(...usersElements);\n        users.forEach((user) => {\n            chatService.getHistoryMessage(user.login);\n        });\n    }\n}\nfunction addMessagesCount(messageCount, userName) {\n    const users = document.querySelector('.users');\n    if (users) {\n        const usersElements = [...users.children];\n        const userToUpdate = usersElements.find((element) => {\n            if (element instanceof HTMLElement)\n                return element.dataset.name === userName;\n        });\n        if (userToUpdate) {\n            const existingMessageElement = userToUpdate.querySelector('.user-message-count');\n            if (existingMessageElement)\n                existingMessageElement.textContent = messageCount.toString();\n            else {\n                const messageCountElement = document.createElement('span');\n                messageCountElement.className = 'user-message-count';\n                messageCountElement.textContent = messageCount.toString();\n                userToUpdate.append(messageCountElement);\n            }\n        }\n    }\n}\nfunction increaseMessageCount(userName) {\n    const users = document.querySelector('.users');\n    if (users) {\n        const usersElements = [...users.children];\n        const userToUpdate = usersElements.find((element) => {\n            if (element instanceof HTMLElement)\n                return element.dataset.name === userName;\n        });\n        if (userToUpdate) {\n            const existingMessageElement = userToUpdate.querySelector('.user-message-count');\n            if (existingMessageElement) {\n                const currentMessageCount = Number(existingMessageElement.textContent);\n                existingMessageElement.textContent = (currentMessageCount + 1).toString();\n            }\n            else {\n                const messageCountElement = document.createElement('span');\n                messageCountElement.className = 'user-message-count';\n                messageCountElement.textContent = '1';\n                userToUpdate.append(messageCountElement);\n            }\n        }\n    }\n}\nfunction removeMessageCount(userName) {\n    const users = document.querySelector('.users');\n    if (users) {\n        const usersElements = [...users.children];\n        const userToUpdate = usersElements.find((element) => {\n            if (element instanceof HTMLElement)\n                return element.dataset.name === userName;\n        });\n        if (userToUpdate) {\n            const existingMessageElement = userToUpdate.querySelector('.user-message-count');\n            if (existingMessageElement) {\n                existingMessageElement.remove();\n            }\n        }\n    }\n}\nfunction drawMessage(message, currentUser, chatService) {\n    removeChatInfoMessage();\n    const messageContainer = document.createElement('div');\n    messageContainer.className = 'message-container';\n    messageContainer.dataset.id = message.id;\n    const messageHeader = createMessageHeader(message, currentUser);\n    const messageTextContainer = document.createElement('div');\n    messageTextContainer.className = 'message-container';\n    const messageText = document.createElement('p');\n    messageText.className = 'message-text';\n    messageText.textContent = message.text;\n    messageTextContainer.append(messageText);\n    const messageFooter = document.createElement('div');\n    messageFooter.className = 'message-footer';\n    const messageStatus = document.createElement('p');\n    messageStatus.className = 'message-status';\n    const messageEditState = document.createElement('p');\n    messageEditState.className = 'message-edit-state';\n    messageEditState.textContent = message.status.isEdited ? 'edited' : '';\n    messageFooter.append(messageEditState, messageStatus);\n    if (message.from === currentUser) {\n        messageContainer.classList.add('chat-current-user-message');\n        messageStatus.textContent = (0, helpers_1.getStatus)(message.status);\n    }\n    const contextMenuHandler = (0, chat_handlers_1.messageRightClickHandler)(message, currentUser, chatService);\n    messageContainer.addEventListener('contextmenu', contextMenuHandler);\n    messageContainer.append(messageHeader, messageTextContainer, messageFooter);\n    return messageContainer;\n}\nfunction createMessageHeader(message, currentUser) {\n    const messageHeader = document.createElement('div');\n    messageHeader.className = 'message-header';\n    const senderName = document.createElement('p');\n    senderName.className = 'message-sender-name';\n    const messageFrom = message.from;\n    const date = document.createElement('p');\n    date.className = 'message-date';\n    date.textContent = (0, helpers_1.getDate)(message.datetime);\n    senderName.textContent =\n        messageFrom === currentUser\n            ? 'You'\n            : (senderName.textContent = messageFrom);\n    messageHeader.append(senderName, date);\n    return messageHeader;\n}\nfunction removeChatInfoMessage() {\n    const infoMessage = document.querySelector('.chat-empty-message');\n    if (infoMessage)\n        infoMessage.remove();\n}\nfunction drawMessageHistory(messages, currentUser, chatService) {\n    let isSeparatorUsed = false;\n    const chatElement = document.querySelector('.chat-messages');\n    if (messages.length > 0) {\n        const listOfMessageElements = [];\n        messages.forEach((message) => {\n            if ((message.from === chatService.activeChatWith.login &&\n                message.to === currentUser) ||\n                (message.from === currentUser &&\n                    message.to === chatService.activeChatWith.login)) {\n                if (message.status.isReaded === false &&\n                    isSeparatorUsed === false &&\n                    message.to === currentUser) {\n                    listOfMessageElements.push(drawNewMessageLine());\n                    isSeparatorUsed = true;\n                }\n                listOfMessageElements.push(drawMessage(message, currentUser, chatService));\n            }\n        });\n        chatElement === null || chatElement === void 0 ? void 0 : chatElement.append(...listOfMessageElements);\n        if (isSeparatorUsed)\n            (0, chat_handlers_1.scrollChatToSeparator)();\n    }\n    else {\n        showEmptyChatMessage();\n    }\n}\nfunction showEmptyChatMessage() {\n    const existingMessages = document.querySelector('.chat-messages');\n    if (existingMessages) {\n        const existingMessagesElements = [...existingMessages.children];\n        if (existingMessagesElements.length === 0) {\n            const message = document.createElement('p');\n            message.className = 'chat-empty-message';\n            message.textContent = 'Write your first message';\n            existingMessages === null || existingMessages === void 0 ? void 0 : existingMessages.append(message);\n        }\n    }\n}\nfunction drawNewMessageLine() {\n    const lineContainer = document.createElement('div');\n    lineContainer.className = 'new-message-separator';\n    const line = document.createElement('div');\n    line.className = 'new-message-separator-line';\n    const text = document.createElement('p');\n    text.className = 'new-message-separator-text';\n    text.textContent = 'New Messages';\n    lineContainer.append(line, text);\n    return lineContainer;\n}\nfunction removeNewMessageLine() {\n    const chat = document.querySelector('.chat-messages');\n    if (chat) {\n        const line = document.querySelector('.new-message-separator');\n        if (line) {\n            line.remove();\n        }\n    }\n}\nfunction showContextMenu(x, y, messageid, chatService, messageText) {\n    var _a;\n    closeContextMenu();\n    const menuContainer = document.createElement('div');\n    menuContainer.dataset.messageId = messageid;\n    menuContainer.className = 'chat-context-menu';\n    const menuList = document.createElement('ul');\n    menuList.className = 'chat-context-menu-list';\n    const editOption = document.createElement('li');\n    editOption.className = 'edit-message-option';\n    editOption.textContent = 'Edit';\n    const editHandler = (0, chat_handlers_1.editOptionHandler)(messageid, messageText, chatService, menuContainer);\n    editOption.addEventListener('click', editHandler);\n    const deleteOption = document.createElement('li');\n    deleteOption.className = 'delete-message-option';\n    deleteOption.textContent = 'Delete';\n    const deleteHandler = (0, chat_handlers_1.deleteOptionHandler)(chatService, messageid, menuContainer);\n    deleteOption.addEventListener('click', deleteHandler);\n    menuList.append(editOption, deleteOption);\n    menuContainer.append(menuList);\n    (_a = document.querySelector('.chat-messages')) === null || _a === void 0 ? void 0 : _a.append(menuContainer);\n    menuContainer.style.top = y + 'px';\n    menuContainer.style.left = x + 'px';\n    (0, chat_handlers_1.addCloseHandlersForContextMenu)(menuContainer);\n}\nfunction closeContextMenu() {\n    var _a;\n    (_a = document.querySelector('.chat-context-menu')) === null || _a === void 0 ? void 0 : _a.remove();\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.renderInfoContent = renderInfoContent;\nfunction renderInfoContent() {\n    const container = document.querySelector('.wrapper');\n    if (container) {\n        container.innerHTML = '';\n        const main = document.createElement('main');\n        main.classList.add('main', 'main-info');\n        const infoSection = document.createElement('section');\n        infoSection.classList.add('info-section');\n        const infoApplicationTitle = document.createElement('h2');\n        infoApplicationTitle.classList.add('application-info-title');\n        infoApplicationTitle.textContent = 'Fun Chat';\n        const infoApplicationInfo = document.createElement('p');\n        infoApplicationInfo.classList.add('application-info');\n        infoApplicationInfo.textContent =\n            'What could be better than chatting with your friends using a chat app?';\n        const infoApplicationInfoDetails = document.createElement('p');\n        infoApplicationInfoDetails.classList.add('application-info-details');\n        infoApplicationInfoDetails.textContent =\n            'Application has been developed in scope of RSSchool JS/FE 2024Q4 to gain skills with the WebSocket connection protocol.';\n        const infoAuthor = document.createElement('a');\n        infoAuthor.classList.add('application-info-author');\n        infoAuthor.textContent = 'Author Viyaleta Batsura';\n        infoAuthor.href = 'https://github.com/violettab21';\n        const backButton = document.createElement('button');\n        backButton.classList.add('info-back');\n        backButton.textContent = 'Back';\n        backButton.addEventListener('click', () => history.back());\n        infoSection.append(infoApplicationTitle, infoApplicationInfo, infoApplicationInfoDetails, infoAuthor, backButton);\n        main.append(infoSection);\n        container.append(main);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChatService = void 0;\nconst utilities_1 = require(\"../utilities\");\nconst chat_1 = require(\"../pages/chat\");\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../../types\");\nconst chat_handlers_1 = require(\"../pages/chat-handlers\");\nclass ChatService {\n    constructor(connection, router, userService) {\n        this.connection = connection;\n        this.router = router;\n        this.activeChatWith = {};\n        this.activeChatMessages = [];\n        this.userService = userService;\n        this.processChatMessages();\n    }\n    processChatMessages() {\n        this.connection.addHandlerPerEvent('message', (event) => {\n            if (event instanceof MessageEvent) {\n                const receivedData = event.data;\n                let data;\n                if (typeof receivedData === 'string')\n                    data = JSON.parse(receivedData);\n                if ((0, utilities_1.isGeneralMessage)(data)) {\n                    this.sendMessageHandler(data);\n                    this.messageHistoryHandler(data);\n                    deliveryMessageHandler(data);\n                    this.readMessageHandler(data);\n                    this.deleteMessageHandler(data);\n                    this.editMessageHandler(data);\n                }\n            }\n        });\n    }\n    sendMessageHandler(data) {\n        if (data.type === types_1.ResponseTypesChat.MSG_SEND &&\n            (0, utilities_1.isMessagePayloadServer)(data.payload) &&\n            this.userService.currentUser.login) {\n            this.handleMessageSend(data.payload, this.userService.currentUser.login);\n        }\n    }\n    messageHistoryHandler(data) {\n        if (data.type === types_1.ResponseTypesChat.MSG_FROM_USER &&\n            (0, utilities_1.isMessagesPayloadServer)(data.payload) &&\n            this.userService.currentUser.login) {\n            this.handleHistory(data.payload, this.userService.currentUser.login);\n        }\n    }\n    readMessageHandler(data) {\n        if (data.type === types_1.ResponseTypesChat.MSG_READ &&\n            (0, utilities_1.isMessagePayloadServerStatus)(data.payload)) {\n            this.updateMessages(data.payload);\n        }\n    }\n    deleteMessageHandler(data) {\n        if (data.type === types_1.ResponseTypesChat.MSG_DELETE &&\n            (0, utilities_1.isMessagePayloadServerStatus)(data.payload)) {\n            this.handleMessageDelete(data.payload);\n        }\n    }\n    editMessageHandler(data) {\n        if (data.type === types_1.ResponseTypesChat.MSG_EDIT &&\n            (0, utilities_1.isMessagePayloadServerStatus)(data.payload)) {\n            this.handleMessageEdit(data.payload);\n        }\n    }\n    sendChatMessage(userRequest) {\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(userRequest));\n        }\n    }\n    getHistoryMessage(selectedUser) {\n        const id = crypto.randomUUID();\n        const request = {\n            id: id,\n            type: types_1.ResponseTypesChat.MSG_FROM_USER,\n            payload: {\n                user: {\n                    login: selectedUser,\n                },\n            },\n        };\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(request));\n        }\n    }\n    handleMessageSend(message, userName) {\n        var _a;\n        if ((message.message.from === this.activeChatWith.login &&\n            message.message.to === userName) ||\n            (message.message.from === userName &&\n                message.message.to === this.activeChatWith.login)) {\n            (_a = document\n                .querySelector('.chat-messages')) === null || _a === void 0 ? void 0 : _a.append((0, chat_1.drawMessage)(message.message, userName, this));\n            const lineSeparator = document.querySelector('.new-message-separator');\n            if (!lineSeparator)\n                (0, chat_handlers_1.scrollChatToBottom)();\n            this.activeChatMessages.push(message.message);\n        }\n        else {\n            if (message.message.to === userName) {\n                (0, chat_1.increaseMessageCount)(message.message.from);\n            }\n        }\n    }\n    handleHistory(messagesPayload, currentUser) {\n        const messages = messagesPayload.messages;\n        if (this.activeChatWith.login) {\n            this.activeChatMessages = [];\n            messages.forEach((message) => this.activeChatMessages.push(message));\n            (0, chat_1.drawMessageHistory)(messages, currentUser, this);\n        }\n        const notReadMessages = messages.filter((message) => {\n            return (message.to === currentUser && message.status.isReaded === false);\n        });\n        if (notReadMessages.length > 0) {\n            (0, chat_1.addMessagesCount)(notReadMessages.length, notReadMessages[0].from);\n        }\n        else if (notReadMessages.length === 0) {\n            const readMessages = messages.find((message) => {\n                return (message.to === currentUser &&\n                    message.status.isReaded === true);\n            });\n            if (readMessages)\n                (0, chat_1.removeMessageCount)(readMessages.from);\n        }\n    }\n    getNotReadMessagesActiveChat() {\n        const notReadMessages = this.activeChatMessages.filter((message) => {\n            return (message.from === this.activeChatWith.login &&\n                message.status.isReaded === false);\n        });\n        return notReadMessages;\n    }\n    sendReadNotification(message) {\n        const id = crypto.randomUUID();\n        const request = {\n            id: id,\n            type: types_1.ResponseTypesChat.MSG_READ,\n            payload: {\n                message: {\n                    id: message.id,\n                },\n            },\n        };\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(request));\n        }\n    }\n    updateMessages(messagePayload) {\n        this.activeChatMessages.forEach((message) => {\n            if (message.id === messagePayload.message.id) {\n                message.status.isReaded =\n                    messagePayload.message.status.isReaded;\n            }\n        });\n        const chat = document.querySelector('.chat-messages');\n        if (chat) {\n            const chatMessagesElements = [...chat.children];\n            const messageToUpdate = chatMessagesElements.find((element) => {\n                if (element instanceof HTMLElement) {\n                    return (element.dataset.id === messagePayload.message.id &&\n                        element.classList.contains('chat-current-user-message'));\n                }\n            });\n            if (messageToUpdate) {\n                const status = messageToUpdate.querySelector('.message-status');\n                if (status)\n                    status.textContent = (0, helpers_1.getStatus)(messagePayload.message.status);\n            }\n        }\n    }\n    sendMessageDeleteNotification(messageId) {\n        const id = crypto.randomUUID();\n        const request = {\n            id: id,\n            type: types_1.ResponseTypesChat.MSG_DELETE,\n            payload: {\n                message: {\n                    id: messageId,\n                },\n            },\n        };\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(request));\n        }\n    }\n    sendMessageUpdateNotification(messageId, text) {\n        const id = crypto.randomUUID();\n        const request = {\n            id: id,\n            type: types_1.ResponseTypesChat.MSG_EDIT,\n            payload: {\n                message: {\n                    id: messageId,\n                    text: text,\n                },\n            },\n        };\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(request));\n        }\n    }\n    handleMessageDelete(messagePayload) {\n        const messageToDeleteIndex = this.activeChatMessages.findIndex((message) => message.id === messagePayload.message.id);\n        this.activeChatMessages.splice(messageToDeleteIndex, 1);\n        (0, chat_handlers_1.removeMessageFromChat)(messagePayload.message.id);\n        const users = this.router.userService.users.filter((element) => element.login !== this.router.userService.currentUser.login);\n        users.forEach((user) => {\n            if (user.login !== this.activeChatWith.login)\n                this.getHistoryMessage(user.login);\n        });\n    }\n    handleMessageEdit(messagePayload) {\n        const messageText = messagePayload.message.text;\n        if (messageText) {\n            this.activeChatMessages.forEach((message) => {\n                if (message.id === messagePayload.message.id) {\n                    message.status.isEdited =\n                        messagePayload.message.status.isEdited;\n                    message.text = messageText;\n                }\n            });\n            (0, chat_handlers_1.updateMessageInChat)(messagePayload.message);\n        }\n    }\n    sendMessageRequest(text) {\n        const id = crypto.randomUUID();\n        const messageToSend = text;\n        const to = this.activeChatWith.login;\n        if (to) {\n            const userRequest = {\n                id: id,\n                type: types_1.ResponseTypesChat.MSG_SEND,\n                payload: {\n                    message: {\n                        to: to,\n                        text: messageToSend,\n                    },\n                },\n            };\n            this.sendChatMessage(userRequest);\n        }\n    }\n}\nexports.ChatService = ChatService;\nfunction deliveryMessageHandler(data) {\n    if (data.type === types_1.ResponseTypesChat.MSG_DELIVER &&\n        (0, utilities_1.isMessagePayloadServerStatus)(data.payload)) {\n        handleDeliverStatusMessage(data.payload);\n    }\n}\nfunction handleDeliverStatusMessage(messagePayload) {\n    const message = messagePayload.message;\n    const chat = document.querySelector('.chat-messages');\n    if (chat) {\n        const chatMessagesElements = [...chat.children];\n        const messageToUpdate = chatMessagesElements.find((element) => {\n            if (element instanceof HTMLElement) {\n                return element.dataset.id === message.id;\n            }\n        });\n        if (messageToUpdate) {\n            const status = messageToUpdate.querySelector('.message-status');\n            if (status)\n                status.textContent = (0, helpers_1.getStatus)(message.status);\n        }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendMessageHandler = sendMessageHandler;\nexports.readMessagesHandler = readMessagesHandler;\nexports.searchUsersHandler = searchUsersHandler;\nexports.selectChatHandler = selectChatHandler;\nexports.infoButtonHandler = infoButtonHandler;\nexports.logoutHandler = logoutHandler;\nexports.updateUserStatusHeader = updateUserStatusHeader;\nexports.messageRightClickHandler = messageRightClickHandler;\nexports.scrollChatToBottom = scrollChatToBottom;\nexports.scrollChatToSeparator = scrollChatToSeparator;\nexports.editOptionHandler = editOptionHandler;\nexports.putMessageTextToInput = putMessageTextToInput;\nexports.deleteOptionHandler = deleteOptionHandler;\nexports.closeContextMenuOnMouseMoveHandler = closeContextMenuOnMouseMoveHandler;\nexports.closeContextMenuOnClick = closeContextMenuOnClick;\nexports.removeMessageFromChat = removeMessageFromChat;\nexports.updateMessageInChat = updateMessageInChat;\nexports.addCloseHandlersForContextMenu = addCloseHandlersForContextMenu;\nexports.updateUserStatusUsersList = updateUserStatusUsersList;\nconst chat_1 = require(\"./chat\");\nconst user_service_1 = require(\"../services/user-service\");\nconst chat_2 = require(\"./chat\");\nconst chat_3 = require(\"./chat\");\nfunction sendMessageHandler(chatService, messageText) {\n    return (event) => {\n        const button = document.querySelector('.chat-send-button');\n        if ((event instanceof Event &&\n            event.target instanceof HTMLElement &&\n            event.target.textContent === 'Send') ||\n            (event instanceof KeyboardEvent &&\n                button &&\n                event.key === 'Enter' &&\n                button.textContent === 'Send'))\n            sendMessage(messageText, chatService);\n        if (chatService.activeChatWith.login) {\n            (0, chat_2.removeMessageCount)(chatService.activeChatWith.login);\n        }\n    };\n}\nfunction sendMessage(input, chatService) {\n    if (input.value === '')\n        return;\n    chatService.sendMessageRequest(input.value);\n    input.value = '';\n    chatService\n        .getNotReadMessagesActiveChat()\n        .forEach((message) => chatService.sendReadNotification(message));\n    (0, chat_3.removeNewMessageLine)();\n}\nfunction readMessagesHandler(chatService) {\n    return () => {\n        chatService\n            .getNotReadMessagesActiveChat()\n            .forEach((message) => chatService.sendReadNotification(message));\n        (0, chat_3.removeNewMessageLine)();\n        if (chatService.activeChatWith.login) {\n            (0, chat_2.removeMessageCount)(chatService.activeChatWith.login);\n        }\n    };\n}\nfunction searchUsersHandler(search, userService) {\n    return () => {\n        userService.searchUsers(search.value);\n    };\n}\nfunction selectChatHandler(chatService, userService) {\n    return (event) => {\n        const clickedItem = event.target;\n        if (clickedItem instanceof Element) {\n            const clickedUser = clickedItem.closest('.user-chat');\n            if (clickedUser && clickedUser instanceof HTMLElement) {\n                const userName = clickedUser.dataset.name;\n                if (userName) {\n                    setChatForSelectedUser(userName, chatService, userService);\n                }\n            }\n        }\n    };\n}\nfunction infoButtonHandler(router) {\n    return () => {\n        router.openPage('info');\n    };\n}\nfunction logoutHandler(userService) {\n    return () => {\n        const userRequest = (0, user_service_1.prepareUserLogoutRequest)(userService);\n        userService.sendUserMessage(userRequest);\n    };\n}\nfunction enableSendMessage() {\n    const sendMessageElements = document.querySelector('.chat-message-container');\n    if (sendMessageElements) {\n        [...sendMessageElements.children].forEach((element) => {\n            if (element instanceof HTMLTextAreaElement ||\n                element instanceof HTMLButtonElement)\n                element.disabled = false;\n        });\n    }\n}\nfunction setChatForSelectedUser(userName, chatService, userService) {\n    const chatMessages = document.querySelector('.chat-messages');\n    if (chatMessages)\n        chatMessages.innerHTML = '';\n    const selectedUser = userService.users.find((user) => user.login === userName);\n    if (selectedUser) {\n        enableSendMessage();\n        chatService.activeChatWith = selectedUser;\n        chatService.getHistoryMessage(selectedUser.login);\n        const chatHeader = document.querySelector('.chat-header');\n        if (chatHeader) {\n            const selectedUserElements = [...chatHeader.children];\n            selectedUserElements[0].textContent = userName;\n        }\n        updateUserStatusHeader(selectedUser);\n    }\n}\nfunction updateUserStatusHeader(user) {\n    const chatHeader = document.querySelector('.chat-header');\n    if (chatHeader) {\n        const chatHeaderElements = [...chatHeader.children];\n        if (chatHeaderElements[0].textContent === user.login) {\n            if (user.isLogined) {\n                chatHeaderElements[1].textContent = 'online';\n                chatHeaderElements[1].classList.add('selected-user-status-active');\n                chatHeaderElements[1].classList.remove('selected-user-status-inactive');\n            }\n            else {\n                chatHeaderElements[1].textContent = 'offline';\n                chatHeaderElements[1].classList.add('selected-user-status-inactive');\n                chatHeaderElements[1].classList.remove('selected-user-status-active');\n            }\n        }\n    }\n}\nfunction updateUserStatusUsersList(user) {\n    const usersList = document.querySelector('.users');\n    if (usersList) {\n        const usersElements = [...usersList.children];\n        const userElement = usersElements.find((element) => element.textContent === user.login);\n        if (userElement) {\n            const status = userElement.querySelector('.user-status');\n            if (status) {\n                if (user.isLogined) {\n                    status.classList.remove('user-status-inactive');\n                    status.classList.add('user-status-active');\n                }\n                else {\n                    status.classList.add('user-status-inactive');\n                    status.classList.remove('user-status-active');\n                }\n            }\n        }\n    }\n}\nfunction messageRightClickHandler(message, currentUser, chatService) {\n    return (event) => {\n        if (message.from === currentUser) {\n            event.preventDefault();\n            (0, chat_1.showContextMenu)(event.clientX, event.clientY, message.id, chatService, message.text);\n        }\n    };\n}\nfunction scrollChatToBottom() {\n    const chat = document.querySelector('.chat-messages');\n    if (chat)\n        chat.scrollTop = chat.scrollHeight;\n}\nfunction scrollChatToSeparator() {\n    const chat = document.querySelector('.chat-messages');\n    const separator = document.querySelector('.new-message-separator');\n    if (chat && separator)\n        separator.scrollIntoView(true);\n}\nfunction editOptionHandler(messageid, messageText, chatService, menuContainer) {\n    return () => {\n        putMessageTextToInput(messageid, messageText, chatService);\n        menuContainer.remove();\n    };\n}\nfunction putMessageTextToInput(messageID, messageText, chatService) {\n    var _a, _b;\n    const input = document.querySelector('.chat-input');\n    const saveButton = document.createElement('button');\n    (_a = document.querySelector('.save-update')) === null || _a === void 0 ? void 0 : _a.remove();\n    saveButton.className = 'save-update';\n    saveButton.textContent = 'Save';\n    (_b = document.querySelector('.chat-message-container')) === null || _b === void 0 ? void 0 : _b.append(saveButton);\n    if (input && input instanceof HTMLTextAreaElement) {\n        input.value = messageText;\n        const saveHandler = saveChangesHandler(messageID, input, chatService);\n        saveButton.addEventListener('click', saveHandler);\n    }\n}\nfunction saveChangesHandler(messageID, input, chatService) {\n    return (event) => {\n        chatService.sendMessageUpdateNotification(messageID, input.value);\n        input.value = '';\n        if (event.target instanceof HTMLElement)\n            event.target.remove();\n    };\n}\nfunction deleteOptionHandler(chatService, messageId, menuContainer) {\n    return () => {\n        chatService.sendMessageDeleteNotification(messageId);\n        menuContainer.remove();\n    };\n}\nfunction closeContextMenuOnMouseMoveHandler(menuContainer) {\n    return (event) => {\n        if (event.relatedTarget instanceof Element &&\n            event.target instanceof Element) {\n            if (event.relatedTarget.closest('.chat-context-menu'))\n                return;\n            if (!event.relatedTarget.closest('.chat-context-menu') &&\n                event.target.closest('.chat-context-menu'))\n                menuContainer.remove();\n        }\n    };\n}\nfunction closeContextMenuOnClick(menuContainer) {\n    return (event) => {\n        if (event.target instanceof Element &&\n            !event.target.closest('.chat-context-menu'))\n            menuContainer.remove();\n    };\n}\nfunction removeMessageFromChat(messageId) {\n    const chat = document.querySelector('.chat-messages');\n    if (chat) {\n        const chatMessagesElements = [...chat.children];\n        const messageToDelete = chatMessagesElements.find((element) => {\n            if (element instanceof HTMLElement) {\n                return element.dataset.id === messageId;\n            }\n        });\n        if (messageToDelete) {\n            messageToDelete.remove();\n        }\n    }\n}\nfunction updateMessageInChat(message) {\n    const chat = document.querySelector('.chat-messages');\n    if (chat) {\n        const chatMessagesElements = [...chat.children];\n        const messageToUpdate = chatMessagesElements.find((element) => {\n            if (element instanceof HTMLElement) {\n                return element.dataset.id === message.id;\n            }\n        });\n        if (messageToUpdate) {\n            const messageText = messageToUpdate.querySelector('.message-text');\n            if (messageText && message.text)\n                messageText.textContent = message.text;\n            const messageState = messageToUpdate.querySelector('.message-edit-state');\n            if (messageState && message.status.isEdited)\n                messageState.textContent = 'edited';\n        }\n    }\n}\nfunction addCloseHandlersForContextMenu(menuContainer) {\n    const closeHandler = closeContextMenuOnMouseMoveHandler(menuContainer);\n    menuContainer.addEventListener('mouseout', closeHandler);\n    const closeHandlerOnClick = closeContextMenuOnClick(menuContainer);\n    document.addEventListener('click', closeHandlerOnClick);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.renderLoginContent = renderLoginContent;\nconst login_handlers_1 = require(\"./login-handlers\");\nfunction renderLoginContent(Connection, UserService, router) {\n    const container = document.querySelector('.wrapper');\n    if (container) {\n        container.innerHTML = '';\n        container.append(createLoginForm(Connection, UserService, router));\n    }\n    const userName = document.querySelector('.user-name-input');\n    const password = document.querySelector('.password-input');\n    if (userName instanceof HTMLInputElement &&\n        password instanceof HTMLInputElement) {\n        if (userName.validity.valid === false ||\n            password.validity.valid === false)\n            (0, login_handlers_1.disableLoginButton)();\n        else\n            (0, login_handlers_1.enableLoginButton)();\n    }\n}\nfunction createLoginForm(Connection, UserService, router) {\n    const main = document.createElement('main');\n    main.className = 'main';\n    main.classList.add('main-login');\n    const form = document.createElement('form');\n    form.className = 'auth-form';\n    const userName = createUserNameField();\n    const password = createPasswordField();\n    const loginButton = document.createElement('button');\n    loginButton.className = 'login-button';\n    loginButton.textContent = 'Login';\n    const loginButtonHandler = (0, login_handlers_1.loginHandler)(Connection, UserService);\n    loginButton.addEventListener('click', loginButtonHandler);\n    const infoButton = document.createElement('button');\n    infoButton.className = 'login-info-button';\n    infoButton.textContent = 'Info';\n    const infoHandler = (0, login_handlers_1.infoButtonHandlerLogin)(router);\n    infoButton.addEventListener('click', infoHandler);\n    form.append(userName, password, loginButton, infoButton);\n    main.append(form);\n    return main;\n}\nfunction createUserNameField() {\n    const userNameContainer = document.createElement('div');\n    userNameContainer.className = 'user-name-row';\n    const labelUserName = document.createElement('label');\n    labelUserName.className = 'user-name-label';\n    labelUserName.textContent = 'User Name';\n    const inputUserName = document.createElement('input');\n    inputUserName.className = 'user-name-input';\n    const errorMessage = document.createElement('p');\n    errorMessage.className = 'user-name-error';\n    if (inputUserName instanceof HTMLInputElement) {\n        inputUserName.required = true;\n        inputUserName.minLength = 2;\n        inputUserName.maxLength = 10;\n        const userNameHandler = (0, login_handlers_1.userNameFieldHandler)(inputUserName, errorMessage);\n        inputUserName.addEventListener('input', userNameHandler);\n    }\n    userNameContainer.append(labelUserName, inputUserName, errorMessage);\n    return userNameContainer;\n}\nfunction createPasswordField() {\n    const passwordContainer = document.createElement('div');\n    passwordContainer.className = 'password-row';\n    const labelPassword = document.createElement('label');\n    labelPassword.className = 'password-label';\n    labelPassword.textContent = 'Password';\n    const inputPassword = document.createElement('input');\n    inputPassword.className = 'password-input';\n    const errorMessage = document.createElement('p');\n    errorMessage.className = 'password-error';\n    if (inputPassword instanceof HTMLInputElement) {\n        inputPassword.required = true;\n        inputPassword.minLength = 6;\n        inputPassword.maxLength = 10;\n        inputPassword.pattern = `[a-zA-Z0-9]{6,10}`;\n        const passwordHandler = (0, login_handlers_1.passwordFieldHandler)(inputPassword, errorMessage);\n        inputPassword.addEventListener('input', passwordHandler);\n    }\n    passwordContainer.append(labelPassword, inputPassword, errorMessage);\n    return passwordContainer;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResponseTypesChat = exports.ResponseTypesUsers = void 0;\nvar ResponseTypesUsers;\n(function (ResponseTypesUsers) {\n    ResponseTypesUsers[\"USER_LOGIN\"] = \"USER_LOGIN\";\n    ResponseTypesUsers[\"USER_LOGOUT\"] = \"USER_LOGOUT\";\n    ResponseTypesUsers[\"USER_EXTERNAL_LOGIN\"] = \"USER_EXTERNAL_LOGIN\";\n    ResponseTypesUsers[\"USER_EXTERNAL_LOGOUT\"] = \"USER_EXTERNAL_LOGOUT\";\n    ResponseTypesUsers[\"USER_ACTIVE\"] = \"USER_ACTIVE\";\n    ResponseTypesUsers[\"USER_INACTIVE\"] = \"USER_INACTIVE\";\n    ResponseTypesUsers[\"ERROR\"] = \"ERROR\";\n})(ResponseTypesUsers || (exports.ResponseTypesUsers = ResponseTypesUsers = {}));\nvar ResponseTypesChat;\n(function (ResponseTypesChat) {\n    ResponseTypesChat[\"MSG_SEND\"] = \"MSG_SEND\";\n    ResponseTypesChat[\"MSG_FROM_USER\"] = \"MSG_FROM_USER\";\n    ResponseTypesChat[\"MSG_DELIVER\"] = \"MSG_DELIVER\";\n    ResponseTypesChat[\"MSG_READ\"] = \"MSG_READ\";\n    ResponseTypesChat[\"MSG_DELETE\"] = \"MSG_DELETE\";\n    ResponseTypesChat[\"MSG_EDIT\"] = \"MSG_EDIT\";\n})(ResponseTypesChat || (exports.ResponseTypesChat = ResponseTypesChat = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Router = void 0;\nconst login_1 = require(\"../pages/login\");\nconst user_service_1 = require(\"../services/user-service\");\nconst chat_1 = require(\"../pages/chat\");\nconst info_1 = require(\"../pages/info\");\nconst chat_service_1 = require(\"../services/chat-service\");\nclass Router {\n    constructor(connection, state) {\n        this.connection = connection;\n        this.currentUrl = '';\n        this.userService = new user_service_1.UserService(connection, this, state);\n        this.chatService = new chat_service_1.ChatService(connection, this, this.userService);\n        this.routes = this.setRoutes();\n        globalThis.addEventListener('popstate', () => {\n            this.openPage();\n        });\n    }\n    openPage(path) {\n        var _a;\n        const isHistory = path !== undefined;\n        if (isHistory) {\n            history.pushState(null, '', path);\n        }\n        this.currentUrl = globalThis.location.pathname.slice(1);\n        if (this.currentUrl === '')\n            history.pushState(null, '', 'login');\n        (_a = this.routes.find((route) => route.url === this.currentUrl)) === null || _a === void 0 ? void 0 : _a.handler();\n    }\n    setRoutes() {\n        const routes = [\n            {\n                url: 'login',\n                handler: this.openLoginPage.bind(this),\n            },\n            {\n                url: 'chat',\n                handler: this.openChatPage.bind(this),\n            },\n            {\n                url: 'info',\n                handler: info_1.renderInfoContent,\n            },\n            {\n                url: '',\n                handler: this.openLoginPage.bind(this),\n            },\n        ];\n        return routes;\n    }\n    openLoginPage() {\n        this.userService.getAllActiveUsers();\n        this.userService.getAllInactiveUsers();\n        const currentUser = this.userService.users.find((element) => element.login === this.userService.currentUser.login);\n        if (currentUser && currentUser.isLogined) {\n            this.redirectToChat();\n        }\n        else\n            (0, login_1.renderLoginContent)(this.connection, this.userService, this);\n    }\n    openChatPage() {\n        this.userService.getAllActiveUsers();\n        this.userService.getAllInactiveUsers();\n        const currentUser = this.userService.users.find((element) => element.login === this.userService.currentUser.login);\n        if (currentUser && currentUser.isLogined) {\n            (0, chat_1.renderChatPageContent)(this.userService, this.chatService, this);\n        }\n        else {\n            this.redirectToLogin();\n        }\n    }\n    redirectToChat() {\n        (0, chat_1.renderChatPageContent)(this.userService, this.chatService, this);\n        history.replaceState(null, '', '/chat');\n    }\n    redirectToLogin() {\n        (0, login_1.renderLoginContent)(this.connection, this.userService, this);\n        history.replaceState(null, '', '/login');\n    }\n}\nexports.Router = Router;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.State = void 0;\nconst session_storage_1 = require(\"./session-storage\");\nclass State {\n    constructor() {\n        this.chatState = new session_storage_1.SessionStorage('chat_state');\n    }\n    saveChatState(chatState) {\n        this.chatState.saveData(chatState);\n    }\n    getChatState() {\n        const result = this.chatState.getData();\n        return result;\n    }\n}\nexports.State = State;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStorage = void 0;\nclass SessionStorage {\n    constructor(key) {\n        this.key = key;\n    }\n    saveData(object) {\n        sessionStorage.setItem(this.key, JSON.stringify(object));\n    }\n    getData() {\n        const data = sessionStorage.getItem(this.key);\n        if (data === null) {\n            return null;\n        }\n        const object = JSON.parse(data);\n        return object;\n    }\n}\nexports.SessionStorage = SessionStorage;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createErrorMessage = createErrorMessage;\nconst close_svg_1 = __importDefault(require(\"../../assets/close.svg\"));\nfunction createErrorMessage(text) {\n    const modalContainer = document.createElement('div');\n    modalContainer.className = 'dark-view';\n    const modal = document.createElement('div');\n    modal.className = 'modal';\n    const cross = document.createElement('span');\n    cross.className = 'icon-close';\n    cross.addEventListener('click', closeModal);\n    const crossImage = new Image();\n    crossImage.src = close_svg_1.default;\n    const modalText = document.createElement('p');\n    modalText.textContent = text;\n    modalText.className = 'modal-text';\n    cross.append(crossImage);\n    modalContainer.append(modal);\n    modal.append(cross, modalText);\n    document.body.append(modalContainer);\n    closeModalOnEsc();\n}\nfunction closeModal() {\n    const modalContainer = document.querySelector('.dark-view');\n    if (modalContainer)\n        modalContainer.remove();\n}\nfunction closeModalOnEsc() {\n    document.addEventListener('keydown', (event) => {\n        if (event.code == 'Escape') {\n            closeModal();\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = void 0;\nclass Connection {\n    constructor() {\n        this.userIdRequest = null;\n        this.url = 'ws://localhost:4000';\n        this.connection = null;\n        this.listeners = {};\n    }\n    connect() {\n        this.connection = new WebSocket(this.url);\n        this.connection.addEventListener('open', (event) => {\n            this.listeners.open.forEach((callback) => callback(event));\n        });\n        this.connection.addEventListener('close', (event) => {\n            this.listeners.close.forEach((callback) => callback(event));\n        });\n        this.connection.addEventListener('message', (event) => {\n            this.listeners.message.forEach((callback) => callback(event));\n        });\n    }\n    addHandlerPerEvent(eventType, callback) {\n        if (eventType in this.listeners) {\n            this.listeners[eventType].push(callback);\n        }\n        else {\n            this.listeners[eventType] = [callback];\n        }\n    }\n}\nexports.Connection = Connection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserService = void 0;\nexports.prepareUserLogoutRequest = prepareUserLogoutRequest;\nexports.prepareUserRequest = prepareUserRequest;\nconst modal_1 = require(\"../components/modal\");\nconst utilities_1 = require(\"../utilities\");\nconst chat_1 = require(\"../pages/chat\");\nconst types_1 = require(\"../../types\");\nconst chat_handlers_1 = require(\"../pages/chat-handlers\");\nclass UserService {\n    constructor(connection, router, state) {\n        this.connection = connection;\n        this.router = router;\n        this.currentUser = {};\n        this.state = state;\n        const savedState = state.getChatState();\n        if (typeof savedState === 'object' &&\n            savedState !== null &&\n            'currentUser' in savedState) {\n            const savedCurrentUser = savedState.currentUser;\n            if (typeof savedCurrentUser === 'object' &&\n                savedCurrentUser !== null)\n                this.currentUser = savedCurrentUser;\n        }\n        this.users = [];\n        this.processUserMessages();\n    }\n    processUserMessages() {\n        this.connection.addHandlerPerEvent('message', (event) => {\n            if (event instanceof MessageEvent) {\n                const receivedData = event.data;\n                let data;\n                if (typeof receivedData === 'string')\n                    data = JSON.parse(receivedData);\n                if ((0, utilities_1.isGeneralMessage)(data)) {\n                    this.userLoginHandler(data);\n                    this.userLogoutHandler(data);\n                    this.activeUsersHandler(data);\n                    this.inactiveUsersHandler(data);\n                    this.externalLoginHandler(data);\n                    this.externalLogoutHandler(data);\n                    errorHandler(data);\n                }\n            }\n        });\n    }\n    userLoginHandler(data) {\n        if (data.type === types_1.ResponseTypesUsers.USER_LOGIN &&\n            (0, utilities_1.isUserPayloadServer)(data.payload)) {\n            this.handleUserLoginMessage(data.payload);\n        }\n    }\n    userLogoutHandler(data) {\n        if (data.type === types_1.ResponseTypesUsers.USER_LOGOUT &&\n            (0, utilities_1.isUserPayloadServer)(data.payload)) {\n            this.handleUserLogoutMessage(data.payload);\n        }\n    }\n    activeUsersHandler(data) {\n        if (data.type === types_1.ResponseTypesUsers.USER_ACTIVE &&\n            (0, utilities_1.isUsersPayloadServer)(data.payload)) {\n            this.handleRegisteredUsersMessage(data.payload);\n        }\n    }\n    inactiveUsersHandler(data) {\n        if (data.type === types_1.ResponseTypesUsers.USER_INACTIVE &&\n            (0, utilities_1.isUsersPayloadServer)(data.payload)) {\n            this.handleRegisteredUsersMessage(data.payload);\n        }\n    }\n    externalLoginHandler(data) {\n        if (data.type === types_1.ResponseTypesUsers.USER_EXTERNAL_LOGIN &&\n            (0, utilities_1.isUserPayloadServer)(data.payload)) {\n            this.handleExternalLogin(data.payload);\n        }\n    }\n    externalLogoutHandler(data) {\n        if (data.type === types_1.ResponseTypesUsers.USER_EXTERNAL_LOGOUT &&\n            (0, utilities_1.isUserPayloadServer)(data.payload)) {\n            this.handleExternalLogout(data.payload);\n        }\n    }\n    handleUserLoginMessage(message) {\n        var _a;\n        if (message.user.login === ((_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.login) &&\n            message.user.isLogined) {\n            this.updateUsersListAfterLogin(message.user);\n            if (globalThis.location.pathname.slice(1) === 'login')\n                this.router.openPage('chat');\n            this.state.saveChatState({\n                currentUser: this.currentUser,\n            });\n        }\n    }\n    updateUsersListAfterLogin(user) {\n        if (this.users.some((element) => element.login === user.login)) {\n            const index = this.users.findIndex((element) => element.login === user.login);\n            this.users[index].isLogined = user.isLogined;\n        }\n        else {\n            this.users.push(user);\n        }\n    }\n    updateUsersListAfterLogout() {\n        if (this.users.some((element) => element.login === this.currentUser.login)) {\n            const index = this.users.findIndex((element) => element.login === this.currentUser.login);\n            this.users.splice(index, 1);\n        }\n    }\n    handleUserLogoutMessage(message) {\n        var _a;\n        if (message.user.login === ((_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.login) &&\n            !message.user.isLogined) {\n            this.currentUser = {};\n            this.router.chatService.activeChatWith = {};\n            this.state.saveChatState({\n                currentUser: this.currentUser,\n            });\n            this.updateUsersListAfterLogout();\n            this.router.openPage('login');\n        }\n    }\n    handleRegisteredUsersMessage(message) {\n        const users = message.users;\n        users.forEach((user) => {\n            this.updateUsersListAfterLogin(user);\n        });\n        (0, chat_1.drawUsers)(this.users.filter((element) => element.login !== this.currentUser.login), this.router.chatService);\n    }\n    sendUserMessage(userRequest) {\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(userRequest));\n        }\n    }\n    getAllActiveUsers() {\n        const id = crypto.randomUUID();\n        const request = {\n            id: id,\n            type: types_1.ResponseTypesUsers.USER_ACTIVE,\n            payload: null,\n        };\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(request));\n        }\n    }\n    getAllInactiveUsers() {\n        const id = crypto.randomUUID();\n        const request = {\n            id: id,\n            type: types_1.ResponseTypesUsers.USER_INACTIVE,\n            payload: null,\n        };\n        if (this.connection.connection) {\n            this.connection.connection.send(JSON.stringify(request));\n        }\n    }\n    handleExternalLogin(message) {\n        if (this.users.some((element) => element.login === message.user.login)) {\n            const affectedUser = this.users.find((element) => element.login === message.user.login);\n            if (affectedUser)\n                affectedUser.isLogined = true;\n            (0, chat_handlers_1.updateUserStatusUsersList)(message.user);\n            (0, chat_handlers_1.updateUserStatusHeader)(message.user);\n        }\n        else {\n            this.users.push(message.user);\n            (0, chat_1.drawUser)(message.user);\n        }\n    }\n    handleExternalLogout(message) {\n        const affectedUser = this.users.find((element) => element.login === message.user.login);\n        if (affectedUser)\n            affectedUser.isLogined = false;\n        (0, chat_handlers_1.updateUserStatusUsersList)(message.user);\n        (0, chat_handlers_1.updateUserStatusHeader)(message.user);\n    }\n    searchUsers(searchValue) {\n        const usersWithoutCurrent = this.users.filter((element) => element.login !== this.currentUser.login);\n        const filteredUsers = usersWithoutCurrent.filter((user) => user.login.includes(searchValue));\n        (0, chat_1.drawUsers)(filteredUsers, this.router.chatService);\n    }\n}\nexports.UserService = UserService;\nfunction errorHandler(data) {\n    if (data.type === types_1.ResponseTypesUsers.ERROR &&\n        (0, utilities_1.isErrorPayload)(data.payload)) {\n        const errorPayload = data.payload;\n        (0, modal_1.createErrorMessage)(errorPayload.error);\n    }\n}\nfunction prepareUserLogoutRequest(userService) {\n    const currentUserName = userService.currentUser.login;\n    const currentUserPassword = userService.currentUser.password;\n    let loginValue = '';\n    let passwordValue = '';\n    if (currentUserName && currentUserPassword) {\n        loginValue = currentUserName;\n        passwordValue = currentUserPassword;\n    }\n    const id = crypto.randomUUID();\n    const userRequest = {\n        id: id,\n        type: types_1.ResponseTypesUsers.USER_LOGOUT,\n        payload: {\n            user: {\n                login: loginValue,\n                password: passwordValue,\n            },\n        },\n    };\n    return userRequest;\n}\nfunction prepareUserRequest(connection, userService) {\n    const loginElement = document.querySelector('.user-name-input');\n    const loginValue = loginElement instanceof HTMLInputElement ? loginElement.value : '';\n    const passwordElement = document.querySelector('.password-input');\n    const passwordValue = passwordElement instanceof HTMLInputElement\n        ? passwordElement.value\n        : '';\n    connection.userIdRequest = crypto.randomUUID();\n    const userRequest = {\n        id: connection.userIdRequest,\n        type: types_1.ResponseTypesUsers.USER_LOGIN,\n        payload: {\n            user: {\n                login: loginValue,\n                password: passwordValue,\n            },\n        },\n    };\n    userService.currentUser = { login: loginValue, password: passwordValue };\n    return userRequest;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBaseContainer = createBaseContainer;\nfunction createBaseContainer() {\n    const container = document.createElement('div');\n    container.className = 'wrapper';\n    document.body.append(container);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst connection_1 = require(\"./app/connection/connection\");\nrequire(\"./sass/_style.scss\");\nconst main_base_1 = require(\"./app/pages/main-base\");\nconst state_1 = require(\"./app/state/state\");\nconst router_1 = require(\"./app/components/router\");\nconst modal_1 = require(\"./app/components/modal\");\nconst types_1 = require(\"./types\");\nconst connection = new connection_1.Connection();\n(0, main_base_1.createBaseContainer)();\nconst state = new state_1.State();\nconst router = new router_1.Router(connection, state);\nconnection.addHandlerPerEvent('open', () => {\n    const reconnectMessage = document.querySelector('.reconnect-message');\n    if (reconnectMessage)\n        reconnectMessage.remove();\n    const currentUser = router.userService.currentUser;\n    router.userService.getAllActiveUsers();\n    router.userService.getAllInactiveUsers();\n    const currentUserDetails = router.userService.users.find((element) => element.login === router.userService.currentUser.login);\n    if (currentUserDetails === null || currentUserDetails === void 0 ? void 0 : currentUserDetails.isLogined) {\n        router.openPage();\n    }\n    else {\n        if ('login' in currentUser &&\n            currentUser.login &&\n            'password' in currentUser &&\n            currentUser.password) {\n            const userRequest = {\n                id: crypto.randomUUID(),\n                type: types_1.ResponseTypesUsers.USER_LOGIN,\n                payload: {\n                    user: {\n                        login: currentUser.login,\n                        password: currentUser.password,\n                    },\n                },\n            };\n            router.userService.sendUserMessage(userRequest);\n            router.openPage();\n        }\n        router.openPage();\n    }\n});\nconnection.addHandlerPerEvent('close', () => {\n    var _a, _b;\n    if (document.querySelector('.reconnect-message')) {\n        router.userService.users = [];\n        connection.connect();\n    }\n    else {\n        (0, modal_1.createErrorMessage)('reconnecting...');\n        (_a = document.querySelector('.icon-close')) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = document\n            .querySelector('.dark-view')) === null || _b === void 0 ? void 0 : _b.classList.add('reconnect-message');\n        connection.connect();\n    }\n});\nconnection.connect();\n"],"names":["Object","defineProperty","exports","value","isGeneralMessage","data","isUserPayloadServer","userObject","user","isLogined","isUserPayloadClient","password","isErrorPayload","error","isUsersPayloadServer","usersObject","users","Array","isArray","isMessagePayloadServer","messageObject","message","text","isMessagesPayloadServer","messagesObject","messages","length","id","isMessages","isMessagePayloadServerStatus","isChatState","currentUser","activeChatUser","activeChatWith","getDate","milliseconds","Intl","DateTimeFormat","timeStyle","dateStyle","format","cancelEnterTextarea","event","key","preventDefault","getStatus","statusObject","status","isReaded","isDelivered","infoButtonHandlerLogin","router","openPage","loginHandler","Connection","UserService","request","user_service_1","prepareUserRequest","sendUserMessage","validateUserName","validatePassword","disableLoginButton","enableLoginButton","passwordFieldHandler","inputPassword","errorMessage","userNameFieldHandler","input","validity","valid","valueMissing","textContent","tooShort","tooLong","patternMismatch","inputUserName","button","document","querySelector","HTMLButtonElement","disabled","__importDefault","this","mod","__esModule","renderChatPageContent","userService","chatService","container","innerHTML","append","header","createElement","className","appName","menu","userName","currentUserName","login","infoButton","infoHandler","chat_handlers_1","infoButtonHandler","addEventListener","logout","logoutButtonHandler","logoutHandler","createHeader","main","classList","add","chatContainer","usersSection","search","placeholder","searchHandler","searchUsersHandler","usersList","selectUserHandler","selectChatHandler","getAllActiveUsers","getAllInactiveUsers","createUsersSection","chatSection","chatHeader","createChatSectionHeader","infoMessage","readHandler","readMessagesHandler","createChatSectionMessages","chatSendMessageContainer","helpers_1","sendMessageButton","handler","sendMessageHandler","createChatSectionSendMessageBlock","createChatSection","createMain","footer","listFooterItems","schoolInfo","schoolIcon","src","rss_logo_svg_1","default","gitHubInfo","gitHubLink","href","copyright","createFooter","drawUsers","usersElements","forEach","item","dataset","name","prepend","push","getHistoryMessage","drawMessage","drawMessageHistory","isSeparatorUsed","chatElement","listOfMessageElements","from","to","lineContainer","line","drawNewMessageLine","scrollChatToSeparator","existingMessages","children","showEmptyChatMessage","addMessagesCount","messageCount","userToUpdate","find","element","HTMLElement","existingMessageElement","toString","messageCountElement","increaseMessageCount","currentMessageCount","Number","removeMessageCount","remove","removeNewMessageLine","showContextMenu","x","y","messageid","messageText","_a","closeContextMenu","menuContainer","messageId","menuList","editOption","editHandler","editOptionHandler","deleteOption","deleteHandler","deleteOptionHandler","style","top","left","addCloseHandlersForContextMenu","drawUser","removeChatInfoMessage","messageContainer","messageHeader","senderName","messageFrom","date","datetime","createMessageHeader","messageTextContainer","messageFooter","messageStatus","messageEditState","isEdited","contextMenuHandler","messageRightClickHandler","renderInfoContent","infoSection","infoApplicationTitle","infoApplicationInfo","infoApplicationInfoDetails","infoAuthor","backButton","history","back","ChatService","utilities_1","chat_1","types_1","constructor","connection","activeChatMessages","processChatMessages","addHandlerPerEvent","MessageEvent","receivedData","JSON","parse","messageHistoryHandler","type","ResponseTypesChat","MSG_DELIVER","payload","messagePayload","chat","messageToUpdate","handleDeliverStatusMessage","deliveryMessageHandler","readMessageHandler","deleteMessageHandler","editMessageHandler","MSG_SEND","handleMessageSend","MSG_FROM_USER","handleHistory","MSG_READ","updateMessages","MSG_DELETE","handleMessageDelete","MSG_EDIT","handleMessageEdit","sendChatMessage","userRequest","send","stringify","selectedUser","crypto","randomUUID","scrollChatToBottom","messagesPayload","notReadMessages","filter","readMessages","getNotReadMessagesActiveChat","sendReadNotification","contains","sendMessageDeleteNotification","sendMessageUpdateNotification","messageToDeleteIndex","findIndex","splice","removeMessageFromChat","updateMessageInChat","sendMessageRequest","messageToSend","Event","target","KeyboardEvent","chat_3","sendMessage","chat_2","searchUsers","clickedItem","Element","clickedUser","closest","chatMessages","sendMessageElements","HTMLTextAreaElement","enableSendMessage","updateUserStatusHeader","setChatForSelectedUser","prepareUserLogoutRequest","clientX","clientY","scrollTop","scrollHeight","separator","scrollIntoView","putMessageTextToInput","closeContextMenuOnMouseMoveHandler","closeContextMenuOnClick","messageToDelete","messageState","closeHandler","closeHandlerOnClick","updateUserStatusUsersList","userElement","chatHeaderElements","messageID","_b","saveButton","saveHandler","saveChangesHandler","relatedTarget","renderLoginContent","form","userNameContainer","labelUserName","HTMLInputElement","required","minLength","maxLength","userNameHandler","login_handlers_1","createUserNameField","passwordContainer","labelPassword","pattern","passwordHandler","createPasswordField","loginButton","loginButtonHandler","createLoginForm","ResponseTypesUsers","Router","login_1","info_1","chat_service_1","state","currentUrl","routes","setRoutes","globalThis","path","undefined","pushState","location","pathname","slice","route","url","openLoginPage","bind","openChatPage","redirectToChat","redirectToLogin","replaceState","State","session_storage_1","chatState","SessionStorage","saveChatState","saveData","getChatState","getData","object","sessionStorage","setItem","getItem","createErrorMessage","modalContainer","modal","cross","closeModal","crossImage","Image","close_svg_1","modalText","body","code","userIdRequest","listeners","connect","WebSocket","open","callback","close","eventType","currentUserPassword","loginValue","passwordValue","USER_LOGOUT","loginElement","passwordElement","USER_LOGIN","modal_1","savedState","savedCurrentUser","processUserMessages","userLoginHandler","userLogoutHandler","activeUsersHandler","inactiveUsersHandler","externalLoginHandler","externalLogoutHandler","ERROR","errorPayload","errorHandler","handleUserLoginMessage","handleUserLogoutMessage","USER_ACTIVE","handleRegisteredUsersMessage","USER_INACTIVE","USER_EXTERNAL_LOGIN","handleExternalLogin","USER_EXTERNAL_LOGOUT","handleExternalLogout","updateUsersListAfterLogin","some","index","updateUsersListAfterLogout","affectedUser","searchValue","filteredUsers","includes","createBaseContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","call","d","definition","o","enumerable","get","g","Function","e","window","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","scriptUrl","importScripts","currentScript","tagName","toUpperCase","scripts","getElementsByTagName","i","test","Error","replace","p","connection_1","main_base_1","state_1","router_1","reconnectMessage","currentUserDetails"],"sourceRoot":""}